<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0">
  <developers>
    <developer>
      <name>Maksim Kostromin</name>
      <email>daggerok@gmail.com</email>
      <organization>Sets of open source Maksim Kostromin aka daggerok projects</organization>
      <organizationUrl>https://github.com/daggerok/</organizationUrl>
    </developer>
  </developers>
  <licenses>
    <license>
      <name>MIT License</name>
      <url>https://github.com/daggerok/quarkus-elytron-security-jdbc-postgresql-example/blob/master/LICENSE</url>
    </license>
  </licenses>
  <organization>
    <name>Maksim Kostromin aka daggerok open source projects sets</name>
    <url>https://github.com/daggerok/</url>
  </organization>
  <scm>
    <developerConnection>scm:git:git@github.com:daggerok/quarkus-elytron-security-jdbc-postgresql-example.git</developerConnection>
    <connection>scm:git:https://github.com/daggerok/quarkus-elytron-security-jdbc-postgresql-example.git</connection>
    <url>https://github.com/daggerok/quarkus-elytron-security-jdbc-postgresql-example</url>
    <tag>HEAD</tag>
  </scm>
  <modelVersion>4.0.0</modelVersion>
  <name>${project.artifactId}</name>
  <groupId>com.github.daggerok.quarkus</groupId>
  <artifactId>quarkus-elytron-security-jdbc-postgresql-example</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <properties>
    <java.version>1.8</java.version>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <encoding>UTF-8</encoding>
    <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>
    <quarkus.version>1.0.0.CR1</quarkus.version>
    <Semantic-UI.version>2.4.1</Semantic-UI.version>
    <compiler-plugin.version>3.8.1</compiler-plugin.version>
    <maven.compiler.parameters>true</maven.compiler.parameters>
    <surefire-plugin.version>3.0.0-M3</surefire-plugin.version>
    <versions-maven-plugin.version>2.7</versions-maven-plugin.version>
    <docker-labels-maintainer>Maksim Kostromin https://github.com/daggerok</docker-labels-maintainer>
    <docker-maven-plugin.version>0.31.0</docker-maven-plugin.version>
    <docker-repository>daggerok</docker-repository>
    <postgres-host>postgres</postgres-host>
    <postgres-port>5432</postgres-port>
    <quarkus-host>quarkus</quarkus-host>
    <quarkus-port>8080</quarkus-port>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-bom</artifactId>
        <version>${quarkus.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>Semantic-UI</artifactId>
      <version>${Semantic-UI.version}</version>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-jsonb</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-elytron-security-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <defaultGoal>clean compile quarkus:build</defaultGoal>
    <plugins>
      <plugin>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemProperties>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker-maven-plugin.version}</version>
        <configuration>
          <follow>false</follow>
          <verbose>true</verbose>
          <useColor>true</useColor>
          <logDate>default</logDate>
          <autoPull>always</autoPull>
          <keepRunning>false</keepRunning>
          <watchInterval>500</watchInterval>
          <allContainers>true</allContainers>
          <removeVolumes>true</removeVolumes>
          <imagePullPolicy>IfNotPresent</imagePullPolicy>
          <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
          <images>
            <!-- postgres -->
            <image>
              <name>${docker-repository}/${postgres-host}:${project.version}</name>
              <alias>${postgres-host}</alias>
              <build>
                <from>postgres:alpine</from>
                <labels>
                  <maintainer>${docker-labels-maintainer}</maintainer>
                </labels>
                <ports>
                  <port>${postgres-port}</port>
                </ports>
                <env>
                  <POSTGRES_PORT>${postgres-port}</POSTGRES_PORT>
                  <POSTGRES_DB>postgres</POSTGRES_DB>
                  <POSTGRES_USER>postgres</POSTGRES_USER>
                  <POSTGRES_PASSWORD>postgres</POSTGRES_PASSWORD>
                  <POSTGRES_HOST>${postgres-host}.${project.artifactId}</POSTGRES_HOST>
                </env>
                <healthCheck>
                  <retries>9</retries>
                  <timeout>3s</timeout>
                  <interval>3s</interval>
                  <startPeriod>3s</startPeriod>
                  <cmd>pg_isready -h 127.0.0.1 -p ${postgres-port} -d $$POSTGRES_DB -U $$POSTGRES_USER</cmd>
                </healthCheck>
              </build>
              <run>
                <hostname>${postgres-host}</hostname>
                <network>
                  <mode>custom</mode>
                  <name>${project.artifactId}</name>
                  <alias>${postgres-host}</alias>
                  <alias>${postgres-host}.${project.artifactId}</alias>
                </network>
                <ports>
                  <port>${postgres-port}:${postgres-port}</port>
                </ports>
                <wait>
                  <time>35000</time>
                  <healthy>true</healthy>
                </wait>
              </run>
            </image>
            <!-- quarkus app -->
            <image>
              <name>${docker-repository}/${quarkus-host}:${project.version}</name>
              <alias>${quarkus-host}</alias>
              <build>
                <from>openjdk:8u212-jre-alpine</from>
                <env>
                  <SERVER_PORT>${quarkus-port}</SERVER_PORT>
                  <POSTGRES_DB>postgres</POSTGRES_DB>
                  <POSTGRES_USER>postgres</POSTGRES_USER>
                  <POSTGRES_PASSWORD>postgres</POSTGRES_PASSWORD>
                  <POSTGRES_PORT>${postgres-port}</POSTGRES_PORT>
                  <POSTGRES_HOST>${postgres-host}.${project.artifactId}</POSTGRES_HOST>
                </env>
                <labels>
                  <maintainer>${docker-labels-maintainer}</maintainer>
                </labels>
                <ports>
                  <port>${quarkus-port}</port>
                </ports>
                <healthCheck>
                  <timeout>3s</timeout><!-- Fail if no response after 3 seconds -->
                  <startPeriod>5s</startPeriod><!-- Allow 5 seconds for the container to start before being flagged as unhealthy -->
                  <cmd>wget --quiet --tries=1 --spider http://127.0.0.1:${quarkus-port}/health || exit 1</cmd>
                </healthCheck>
                <assembly>
                  <mode>dir</mode>
                  <inline>
                    <id>build-${quarkus-host}</id>
                    <files>
                      <file>
                        <source>${project.basedir}/target/${project.artifactId}-${project.version}-runner.jar</source>
                        <destName>${project.artifactId}-${project.version}-runner.jar</destName>
                      </file>
                    </files>
                    <fileSets>
                      <fileSet>
                        <directory>target/lib</directory>
                        <outputDirectory>/lib</outputDirectory>
                      </fileSet>
                    </fileSets>
                  </inline>
                  <name>.</name>
                  <targetDir>/tmp</targetDir>
                </assembly>
                <workdir>/tmp</workdir>
                <!--<entryPoint>java</entryPoint>
                <cmd>
                  <arg>java</arg>
                  <arg>-jar</arg>
                  <arg>/tmp/${project.artifactId}-${project.version}-runner.jar</arg>
                </cmd>-->
                <cmd>
                  <shell>/bin/ash</shell>
                </cmd>
                <entryPoint>
                  <shell>java -jar /tmp/${project.artifactId}-${project.version}-runner.jar</shell>
                </entryPoint>
              </build>
              <run>
                <dependsOn>
                  <container>${postgres-host}</container>
                </dependsOn>
                <imagePullPolicy>Never</imagePullPolicy>
                <hostname>${quarkus-host}</hostname>
                <network>
                  <mode>custom</mode>
                  <name>${project.artifactId}</name>
                  <alias>${quarkus-host}</alias>
                  <alias>${quarkus-host}.${project.artifactId}</alias>
                </network>
                <ports>
                  <port>${quarkus-port}:${quarkus-port}</port>
                </ports>
                <wait>
                  <http>
                    <url>http://127.0.0.1:${quarkus-port}/health</url>
                    <method>GET</method>
                    <status>200..399</status>
                  </http>
                  <time>60000</time>
                  <healthy>true</healthy>
                </wait>
              </run>
            </image>
          </images>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${surefire-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <systemProperties>
                    <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                  </systemProperties>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>
    <profile>
      <id>versions</id>
      <build>
        <defaultGoal>versions:display-property-updates</defaultGoal>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>versions-maven-plugin</artifactId>
            <version>${versions-maven-plugin.version}</version>
            <configuration>
              <!-- Preferences | Build, Execution, Deployment | Build Tools | Maven | Runner | VM Options: -Dmaven.multiModuleProjectDirectory=$M2_HOME -->
              <rulesUri>file:///${maven.multiModuleProjectDirectory}/.mvn/versions-maven-plugin-rules.xml</rulesUri>
            </configuration>
            <executions>
              <execution>
                <phase>initialize</phase>
                <goals>
                  <goal>display-dependency-updates</goal>
                  <goal>display-property-updates</goal>
                  <goal>display-plugin-updates</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
